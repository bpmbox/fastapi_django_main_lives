name: Deploy to Hugging Face Spaces

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # ÊâãÂãïÂÆüË°å„ÇÇÂèØËÉΩ

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # ÂÖ®Â±•Ê≠¥„ÇíÂèñÂæó
        lfs: true  # Git LFS „Çµ„Éù„Éº„Éà
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install huggingface_hub
        
    - name: Configure Git for Hugging Face
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
    
    - name: Setup Hugging Face Token
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        # Hugging Face Hub„Å´„É≠„Ç∞„Ç§„É≥
        python -c "
        from huggingface_hub import login
        import os
        token = os.environ.get('HF_TOKEN')
        if token:
            login(token=token)
            print('‚úÖ Hugging Face login successful')
        else:
            print('‚ùå HF_TOKEN not found in secrets')
            exit(1)
        "
    
    - name: Clone Hugging Face Space
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        # Hugging Face Space„Çí„ÇØ„É≠„Éº„É≥
        git clone https://huggingface.co/spaces/kenken999/fastapi_django_main_live hf_space
        cd hf_space
        
        # Ë™çË®ºÊÉÖÂ†±„ÇíË®≠ÂÆö
        git remote set-url origin https://oauth2:$HF_TOKEN@huggingface.co/spaces/kenken999/fastapi_django_main_live
    
    - name: Copy files and update Space
      run: |
        # Â§âÊõ¥„Åï„Çå„Åü„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éî„Éº
        echo "üìÇ Copying updated files..."
        
        # „Éá„Éê„ÉÉ„Ç∞„ÉÑ„Éº„É´„Éê„Éº„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éî„Éº
        if [ -f "codespaces_debug.py" ]; then
          cp codespaces_debug.py hf_space/
          echo "‚úÖ Copied codespaces_debug.py"
        fi
        
        # app.py „Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„Ç≥„Éî„Éº
        if [ -f "app.py" ]; then
          cp app.py hf_space/
          echo "‚úÖ Copied app.py"
        fi
        
        # requirements.txt „Çí„Ç≥„Éî„Éº
        if [ -f "requirements.txt" ]; then
          cp requirements.txt hf_space/
          echo "‚úÖ Copied requirements.txt"
        fi
        
        # Dockerfile „Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„Ç≥„Éî„Éº
        if [ -f "Dockerfile" ]; then
          cp Dockerfile hf_space/
          echo "‚úÖ Copied Dockerfile"
        fi
        
        # README.md „ÇíÊõ¥Êñ∞
        echo "üìù Updating README.md with deployment info..."
        cat > hf_space/README.md << 'EOF'
        ---
        title: FastAPI Django Main Live
        emoji: üöÄ
        colorFrom: blue
        colorTo: purple
        sdk: docker
        pinned: false
        license: mit
        app_port: 8004
        ---

        # FastAPI Debug Toolbar - Hugging Face Spaces

        üöÄ **LaravelÈ¢®„Éá„Éê„ÉÉ„Ç∞„ÉÑ„Éº„É´„Éê„Éº for FastAPI**

        ## üåü ÁâπÂæ¥

        - ‚úÖ **GitHub ActionsËá™Âãï„Éá„Éó„É≠„Ç§**
        - üîß **Content-LengthÂïèÈ°å‰øÆÊ≠£Ê∏à„Åø**
        - üìä **SQLAlchemy „ÇØ„Ç®„É™Áõ£Ë¶ñ**
        - ‚ö° **„É™„Ç¢„É´„Çø„Ç§„É†„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊ∏¨ÂÆö**
        - üé® **LaravelÈ¢®Áæé„Åó„ÅÑUI**
        - üåê **Hugging Face SpacesÂÆåÂÖ®ÂØæÂøú**

        ## üöÄ „Ç¢„ÇØ„Çª„Çπ

        „Éá„Éê„ÉÉ„Ç∞„ÉÑ„Éº„É´„Éê„Éº‰ªò„Åç„ÅÆ„Éö„Éº„Ç∏„Å´„Ç¢„ÇØ„Çª„Çπ„Åó„Å¶„ÄÅÁîªÈù¢‰∏ãÈÉ®„ÅÆ„Éê„Éº„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö

        - `/demo` - ÂÆåÂÖ®„Éá„É¢„Éö„Éº„Ç∏
        - `/simple` - „Ç∑„É≥„Éó„É´„ÉÜ„Çπ„Éà
        - `/users` - „Éá„Éº„Çø„Éô„Éº„Çπ„ÇØ„Ç®„É™„ÉÜ„Çπ„Éà

        ## üîÑ Ëá™Âãï„Éá„Éó„É≠„Ç§

        „Åì„ÅÆ„Çπ„Éö„Éº„Çπ„ÅØGitHub Actions„ÅßËá™ÂãïÊõ¥Êñ∞„Åï„Çå„Åæ„ÅôÔºö
        - `main`„Éñ„É©„É≥„ÉÅ„Å∏„ÅÆ„Éó„ÉÉ„Ç∑„É•„ÅßËá™Âãï„Éá„Éó„É≠„Ç§
        - ÊâãÂãïÂÆüË°å„ÇÇÂèØËÉΩ
        - „Éá„Éê„ÉÉ„Ç∞„ÉÑ„Éº„É´„Éê„Éº„ÅÆÊúÄÊñ∞Áâà„ÇíÂ∏∏„Å´ÂèçÊò†

        ## üì° ÊúÄÁµÇÊõ¥Êñ∞

        Last deployed: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        EOF
    
    - name: Create or update app.py for Hugging Face Spaces
      run: |
        # Hugging Face SpacesÁî®„ÅÆ„É°„Ç§„É≥„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê
        cat > hf_space/app.py << 'EOF'
        #!/usr/bin/env python3
        """
        Hugging Face Spaces FastAPI Debug Toolbar
        GitHub ActionsËá™Âãï„Éá„Éó„É≠„Ç§Áâà
        """
        import os
        import sys

        # codespaces_debug.py „Åã„Çâ app „Çí„Ç§„É≥„Éù„Éº„Éà
        try:
            from codespaces_debug import app
            print("‚úÖ FastAPI Debug Toolbar loaded successfully")
        except ImportError as e:
            print(f"‚ùå Failed to import codespaces_debug: {e}")
            # „Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÁî®„ÅÆÁ∞°Âçò„Å™FastAPI„Ç¢„Éó„É™
            from fastapi import FastAPI
            from fastapi.responses import HTMLResponse
            
            app = FastAPI(title="FastAPI Debug Toolbar - Error")
            
            @app.get("/")
            async def error_page():
                return HTMLResponse("""
                <!DOCTYPE html>
                <html>
                <head><title>Debug Toolbar Error</title></head>
                <body>
                    <h1>‚ùå Error Loading Debug Toolbar</h1>
                    <p>Failed to load codespaces_debug.py</p>
                    <p>Check the logs for more details.</p>
                </body>
                </html>
                """)

        if __name__ == "__main__":
            import uvicorn
            port = int(os.environ.get("PORT", 8004))
            uvicorn.run(app, host="0.0.0.0", port=port)
        EOF
        
        echo "‚úÖ Created app.py for Hugging Face Spaces"
    
    - name: Update requirements.txt for Hugging Face Spaces
      run: |
        # Hugging Face SpacesÁî®„ÅÆrequirements.txt„Çí‰ΩúÊàê
        cat > hf_space/requirements.txt << 'EOF'
        fastapi==0.109.2
        uvicorn[standard]==0.24.0
        starlette==0.36.3
        sqlalchemy==1.4.48
        python-multipart==0.0.6
        jinja2==3.1.2
        python-jose[cryptography]==3.3.0
        passlib[bcrypt]==1.7.4
        EOF
        
        echo "‚úÖ Updated requirements.txt for Hugging Face Spaces"
    
    - name: Create Dockerfile for Hugging Face Spaces
      run: |
        # Hugging Face SpacesÁî®„ÅÆDockerfile„Çí‰ΩúÊàê
        cat > hf_space/Dockerfile << 'EOF'
        FROM python:3.11-slim

        WORKDIR /code

        # „Ç∑„Çπ„ÉÜ„É†„ÅÆ‰æùÂ≠òÈñ¢‰øÇ„Çí„Ç§„É≥„Çπ„Éà„Éº„É´
        RUN apt-get update && apt-get install -y \
            gcc \
            && rm -rf /var/lib/apt/lists/*

        # Python„ÅÆ‰æùÂ≠òÈñ¢‰øÇ„Çí„Ç≥„Éî„Éº„Åó„Å¶„Ç§„É≥„Çπ„Éà„Éº„É´
        COPY ./requirements.txt /code/requirements.txt
        RUN pip install --no-cache-dir --upgrade -r /code/requirements.txt

        # „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Ç≥„Éº„Éâ„Çí„Ç≥„Éî„Éº
        COPY . /code/

        # „Éù„Éº„Éà8004„ÇíÂÖ¨Èñã
        EXPOSE 8004

        # „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÇíËµ∑Âãï
        CMD ["python", "app.py"]
        EOF
        
        echo "‚úÖ Created Dockerfile for Hugging Face Spaces"
    
    - name: Deploy to Hugging Face Spaces
      run: |
        cd hf_space
        
        # Â§âÊõ¥„Åå„ÅÇ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
        if [ -n "$(git status --porcelain)" ]; then
          echo "üì§ Changes detected, deploying to Hugging Face Spaces..."
          
          # Â§âÊõ¥„Çí„Ç≥„Éü„ÉÉ„Éà
          git add .
          git commit -m "üöÄ Auto-deploy from GitHub Actions $(date -u '+%Y-%m-%d %H:%M:%S UTC')

          ‚úÖ Features updated:
          - FastAPI Debug Toolbar (Latest)
          - Content-LengthÂïèÈ°å‰øÆÊ≠£Ê∏à„Åø
          - LaravelÈ¢®UI with streaming response
          - SQLAlchemy query monitoring
          - Real-time performance tracking
          
          ü§ñ Deployed via GitHub Actions"
          
          # Hugging Face Spaces„Å´„Éó„ÉÉ„Ç∑„É•
          git push origin main
          
          echo "‚úÖ Successfully deployed to Hugging Face Spaces!"
          echo "üåê Check your space at: https://huggingface.co/spaces/kenken999/fastapi_django_main_live"
        else
          echo "‚ÑπÔ∏è  No changes detected, skipping deployment"
        fi
    
    - name: Deployment Summary
      run: |
        echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ‚úÖ Success" >> $GITHUB_STEP_SUMMARY
        echo "- **Target**: Hugging Face Spaces" >> $GITHUB_STEP_SUMMARY
        echo "- **Space URL**: https://huggingface.co/spaces/kenken999/fastapi_django_main_live" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Features**: FastAPI Debug Toolbar with Content-Length fix" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìä Debug Toolbar Features" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Laravel-style UI with gradients" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ SQLAlchemy query monitoring" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Real-time performance tracking" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Streaming response (Content-Length fixed)" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Interactive toolbar (click to expand)" >> $GITHUB_STEP_SUMMARY
