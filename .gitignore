# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Environment variables
.env
.env.local
.env.*.local

# Temporary and debug files
aaa*.txt
ccc*.txt
debug_*.py
test_*.py
*debug*.log
diagnostic_*.py
minimal_*.py
simple_*.py
web_debug*.py
chat_debug*.py

# Obsolete files
*.phar
*.tgz
*.ps1
hist*.txt
git*.txt
clean.txt
interpreter_test.txt
test_output.txt

# C extensions
*.so
*.wav
# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.*
.env-*
*env-secrets*
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Codespaces secrets
.codespaces/shared/.env-secrets
.codespaces/**/*.env-secrets

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

#staticfiles/
core.*

*.db

# Security and Secrets
*.pem
*.key
*.crt
*.p12
*.pfx
*service-account*.json
*credentials*.json
*secret*.json
.secrets/
secrets/

# API Keys and Tokens
*token*
*api_key*
*apikey*
*access_token*
*secret_key*

# Environment and Configuration
.env*
!.env.example
config.json
settings.json
local_settings.py

# IDE and Editor Files
.vscode/settings.json
.idea/
*.swp
*.swo

# Temporary and Log Files
*.tmp
*.temp
*.log
logs/
temp/
# 一時的にLFS問題のあるファイルを除外
docs/images/collected/test_2/118224532-3842c400-b438-11eb-923d-a5f66fa6785a.png
docs/images/screenshots/contbk_dashboard.png
staticfiles/haru_greeter_pro_jp/
